{"mappings":"AAAA,MAAMA,EAAUC,SAASC,cAAc,SACjCC,EAAcF,SAASC,cAAc,aAsC3C,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAAKC,KAChCC,YAAW,KACLN,EACFI,EAAI,C,SAAEN,E,MAAUC,IAEhBM,EAAI,C,SAAEP,E,MAAUC,GAAQ,GAEzBA,EAAM,G,CA7CbN,EAAQc,iBAAiB,UAEzB,SAA6BC,GAC3BA,EAAEC,iBACF,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAAcC,SAC1CC,EAAaL,EAAMM,MACnBC,EAAYN,EAAKK,MACjBE,EAAcN,EAAOI,MAC3BpB,EAAYuB,UAAW,EAEvBb,YAAW,KACT,IAAK,IAAIc,EAAI,EAAGA,EAAIF,EAAaE,GAAK,EACpCvB,EAAcuB,EAAGH,EAAYG,GAC1BC,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,QAAQC,IACN,uBAAqBzB,EAAY,QAASC,EACnCyB,OAAGT,OACP,IAGNU,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBuB,QAAQC,IACN,sBAAoBzB,EAAU,QAASC,EAChCyB,OAAGT,OACP,IAGNW,SAAQ,KACHN,IAAMF,EAAc,IACtBtB,EAAYuB,UAAW,EAAK,GAE9B,GAELJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('.form');\nconst btnStartRef = document.querySelector('.js-start');\n\nformRef.addEventListener('submit', startCreatePromises);\n\nfunction startCreatePromises(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  const delayValue = delay.value;\n  const stepValue = step.value;\n  const amountValue = amount.value;\n  btnStartRef.disabled = true;\n\n  setTimeout(() => {\n    for (let i = 0; i < amountValue; i += 1) {\n      createPromise(i, stepValue * i)\n        .then(({ position, delay }) => {\n          console.log(\n            `✅ Fulfilled promise ${position + 1} in ${\n              delay + Number(delayValue)\n            }ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          console.log(\n            `❌ Rejected promise ${position + 1} in ${\n              delay + Number(delayValue)\n            }ms`\n          );\n        })\n        .finally(() => {\n          if (i === amountValue - 1) {\n            btnStartRef.disabled = false;\n          }\n        });\n    }\n  }, delayValue);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$btnStartRef","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","currentTarget","elements","delayValue","value","stepValue","amountValue","disabled","i","then","console","log","Number","catch","finally"],"version":3,"file":"03-promises.7bc0fd3c.js.map"}